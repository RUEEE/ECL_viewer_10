#include "ECLmap.h"
static const InsFormat th06_fmts[] = {
    /* Special param types:
        - 'o' - 'S' used as a label (offset in jump instructions)
        - 'N' - 'S' used as a sub name string (in call/enm creation instructions)
        - 'n' - 's' used as a sub name string
    */
    { 0, "" },
    { 1, "S" },
    { 2, "So" },
    { 3, "SoS" },
    { 4, "SS" },
    { 5, "Sf" },
    { 6, "SS" },
    { 7, "SSS" },
    { 8, "Sf" },
    { 9, "Sff" },
    { 10, "S" },
    { 11, "S" },
    { 12, "S" },
    { 13, "SSS" },
    { 14, "SSS" },
    { 15, "SSS" },
    { 16, "SSS" },
    { 17, "SSS" },
    { 18, "S" },
    { 19, "S" },
    { 20, "Sff" },
    { 21, "Sff" },
    { 22, "Sff" },
    { 23, "Sff" },
    { 24, "Sff" },
    { 25, "Sffff" },
    { 26, "S" },
    { 27, "SS" },
    { 28, "ff" },
    { 29, "So" },
    { 30, "So" },
    { 31, "So" },
    { 32, "So" },
    { 33, "So" },
    { 34, "So" },
    { 35, "NSf" },
    { 36, "" },
    { 37, "NSfSS" },
    { 38, "NSfSS" },
    { 39, "NSfSS" },
    { 40, "NSfSS" },
    { 41, "NSfSS" },
    { 42, "NSfSS" },
    { 43, "fff" },
    { 44, "fff" },
    { 45, "ff" },
    { 46, "f" },
    { 47, "f" },
    { 48, "f" },
    { 49, "ff" },
    { 50, "ff" },
    { 51, "ff" },
    { 52, "Sff" },
    { 53, "Sff" },
    { 54, "Sff" },
    { 55, "Sff" },
    { 56, "Sfff" },
    { 57, "Sfff" },
    { 58, "Sfff" },
    { 59, "Sfff" },
    { 60, "Sfff" },
    { 61, "S" },
    { 62, "S" },
    { 63, "S" },
    { 64, "S" },
    { 65, "ffff" },
    { 66, "" },
    { 67, "ssSSffffS" },
    { 68, "ssSSffffS" },
    { 69, "ssSSffffS" },
    { 70, "ssSSffffS" },
    { 71, "ssSSffffS" },
    { 72, "ssSSffffS" },
    { 73, "ssSSffffS" },
    { 74, "ssSSffffS" },
    { 75, "ssSSffffS" },
    { 76, "S" },
    { 77, "S" },
    { 78, "" },
    { 79, "" },
    { 80, "" },
    { 81, "fff" },
    { 82, "SSSSffff" },
    { 83, "" },
    { 84, "S" },
    { 85, "ssfSffffSSSSSS" },
    { 86, "ssffSfffSSSSSS" },
    { 87, "S" },
    { 88, "Sf" },
    { 89, "Sf" },
    { 90, "Sfff" },
    { 91, "S" },
    { 92, "S" },
    { 93, "ssz" },
    { 94, "" },
    { 95, "NfffssS" },
    { 96, "" },
    { 97, "S" },
    { 98, "ssssS" },
    { 99, "SS" },
    { 100, "S" },
    { 101, "S" },
    { 102, "Sffff" },
    { 103, "fff" },
    { 104, "S" },
    { 105, "S" },
    { 106, "S" },
    { 107, "S" },
    { 108, "N" },
    { 109, "NS" },
    { 110, "S" },
    { 111, "S" },
    { 112, "S" },
    { 113, "S" },
    { 114, "N" },
    { 115, "S" },
    { 116, "N" },
    { 117, "S" },
    { 118, "SSss" },
    { 119, "S" },
    { 120, "S" },
    { 121, "SS" },
    { 122, "S" },
    { 123, "S" },
    { 124, "S" },
    { 125, "" },
    { 126, "S" },
    { 127, "S" },
    { 128, "S" },
    { 129, "SS" },
    { 130, "S" },
    { 131, "ffSSSS" },
    { 132, "S" },
    { 133, "" },
    { 134, "" },
    { 135, "S" },
};

static const InsFormat th07_fmts[] = {
    { 0, "" },
    { 1, "" },
    { 2, "So" },
    { 3, "SoS" },
    { 4, "SS" },
    { 5, "ff" },
    { 6, "SS" },
    { 7, "SSS" },
    { 8, "ff" },
    { 9, "fff" },
    { 10, "SS" },
    { 11, "ff" },
    { 12, "SSS" },
    { 13, "SSS" },
    { 14, "SSS" },
    { 15, "SSS" },
    { 16, "SSS" },
    { 17, "S" },
    { 18, "S" },
    { 19, "fff" },
    { 20, "fff" },
    { 21, "fff" },
    { 22, "fff" },
    { 24, "ff" },
    { 25, "ff" },
    { 26, "fffff" },
    { 27, "fSSSffff" },
    { 28, "SSSo" },
    { 29, "ffSo" },
    { 30, "SSSo" },
    { 31, "ffSo" },
    { 32, "SSSo" },
    { 33, "ffSo" },
    { 34, "SSSo" },
    { 35, "ffSo" },
    { 36, "SSSo" },
    { 37, "ffSo" },
    { 38, "SSSo" },
    { 39, "ffSo" },
    { 40, "f" },
    { 41, "S" },
    { 42, "" },
    { 43, "SSS" },
    { 44, "ffS" },
    { 45, "S" },
    { 46, "fff" },
    { 47, "ffS" },
    { 48, "f" },
    { 49, "S" },
    { 50, "f" },
    { 52, "fff" },
    { 53, "ff" },
    { 54, "SSff" },
    { 55, "SSfff" },
    { 56, "Sfffffff" },
    { 57, "ff" },
    { 58, "ff" },
    { 59, "S" },
    { 60, "S" },
    { 61, "S" },
    { 62, "ffff" },
    { 63, "" },
    { 64, "ssSSffffS" },
    { 65, "ssSSffffS" },
    { 66, "ssSSffffS" },
    { 67, "ssSSffffS" },
    { 68, "ssSSffffS" },
    { 69, "ssSSffffS" },
    { 70, "ssSSffffS" },
    { 71, "ssSSffffS" },
    { 72, "ssSSffffS" },
    { 73, "S" },
    { 74, "S" },
    { 75, "" },
    { 76, "" },
    { 77, "" },
    { 78, "fff" },
    { 79, "SSSSSff" },
    { 80, "" },
    { 81, "SS" },
    { 82, "ssffffffSSSSSS" },
    { 83, "ssffffffSSSSSS" },
    { 84, "S" },
    { 85, "Sf" },
    { 86, "Sf" },
    { 87, "Sfff" },
    { 88, "S" },
    { 89, "S" },
    { 90, "ssm" },
    { 91, "" },
    { 92, "SfffSSS" },
    { 93, "SfffSSS" },
    { 94, "" },
    { 95, "S" },
    { 96, "ssssS" },
    { 97, "SS" },
    { 98, "S" },
    { 99, "S" },
    { 100, "Sffff" },
    { 101, "fff" },
    { 102, "S" },
    { 103, "S" },
    { 104, "S" },
    { 105, "S" },
    { 106, "S" },
    { 107, "S" },
    { 108, "SS" },
    { 110, "S" },
    { 111, "S" },
    { 112, "S" },
    { 113, "S" },
    { 114, "S" },
    { 115, "S" },
    { 116, "S" },
    { 117, "SSS" },
    { 118, "SSSfff" },
    { 119, "S" },
    { 120, "S" },
    { 121, "SS" },
    { 122, "SS" },
    { 124, "S" },
    { 125, "S" },
    { 126, "S" },
    { 128, "S" },
    { 131, "ffSSSS" },
    { 132, "S" },
    { 133, "" },
    { 135, "S" },
    { 136, "S" },
    { 137, "S" },
    { 138, "SSSS" },
    { 139, "SSSS" },
    { 140, "ffff" },
    { 141, "S" },
    { 142, "S" },
    { 143, "f" },
    { 144, "SS" },
    { 145, "SS" },
    { 146, "" },
    { 148, "SSS" },
    { 149, "SffS" },
    { 150, "f" },
    { 151, "ffff" },
    { 152, "Sf" },
    { 153, "fff" },
    { 154, "S" },
    { 155, "f" },
    { 156, "SS" },
    { 157, "Sf" },
    { 158, "Sff" },
    { 159, "ffff" },
    { 160, "S" },
    { 161, "S" },
    { 0, 0 },
};

static const InsFormat th08_fmts[] = {
    { 0, "" },
    { 1, "" },
    { 2, "S" },
    { 3, "S" },
    { 4, "So" },
    { 5, "SoS" },
    { 6, "SS" },
    { 7, "ff" },
    { 9, "ff" },
    { 10, "SS" },
    { 11, "SS" },
    { 12, "SS" },
    { 13, "SS" },
    { 14, "SS" },
    { 15, "ff" },
    { 16, "ff" },
    { 17, "ff" },
    { 18, "ff" },
    { 19, "ff" },
    { 20, "SSS" },
    { 21, "SSS" },
    { 22, "SSS" },
    { 23, "SSS" },
    { 24, "SSS" },
    { 25, "fff" },
    { 26, "fff" },
    { 27, "fff" },
    { 28, "fff" },
    { 30, "S" },
    { 31, "S" },
    { 32, "ff" },
    { 33, "ff" },
    { 34, "fffff" },
    { 36, "fSSSffff" },
    { 37, "f" },
    { 38, "ffff" },
    { 39, "fffff" },
    { 40, "SSSo" },
    { 42, "SSSo" },
    { 44, "SSSo" },
    { 45, "ffSo" },
    { 46, "SSSo" },
    { 47, "ffSo" },
    { 48, "SSSo" },
    { 49, "ffSo" },
    { 50, "SSSo" },
    { 51, "ffSo" },
    { 52, "S" },
    { 53, "" },
    { 54, "S" },
    { 55, "S" },
    { 57, "SS" },
    { 58, "S" },
    { 59, "S" },
    { 61, "SS" },
    { 62, "" },
    { 63, "ff" },
    { 64, "SSff" },
    { 65, "ff" },
    { 66, "SSff" },
    { 67, "SSf" },
    { 70, "f" },
    { 71, "f" },
    { 72, "Sffffff" },
    { 73, "Sfff" },
    { 74, "Sff" },
    { 75, "ffff" },
    { 76, "" },
    { 77, "ff" },
    { 78, "ff" },
    { 79, "S" },
    { 80, "S" },
    { 81, "S" },
    { 82, "f" },
    { 83, "S" },
    { 84, "" },
    { 85, "" },
    { 86, "SSS" },
    { 87, "ffS" },
    { 88, "SS" },
    { 90, "SffSSS" },
    { 91, "SffSSS" },
    { 92, "SffSSS" },
    { 93, "SffSSSS" },
    { 94, "SffSSSS" },
    { 95, "" },
    { 96, "ssSSffffS" },
    { 97, "ssSSffffS" },
    { 98, "ssSSffffS" },
    { 99, "ssSSffffS" },
    { 100, "ssSSffffS" },
    { 101, "ssSSffffS" },
    { 104, "ssSSffffS" },
    { 105, "S" },
    { 106, "S" },
    { 107, "" },
    { 108, "" },
    { 110, "ff" },
    { 111, "SSSSSff" },
    { 112, "" },
    { 113, "SS" },
    { 114, "ssffffffSSSSSS" },
    { 116, "S" },
    { 117, "Sf" },
    { 118, "Sf" },
    { 119, "Sfff" },
    { 120, "S" },
    { 121, "S" },
    { 122, "ssSmmmm" },
    { 123, "" },
    { 124, "S" },
    { 126, "SS" },
    { 127, "S" },
    { 128, "Sffff" },
    { 129, "S" },
    { 130, "S" },
    { 131, "S" },
    { 132, "S" },
    { 133, "SSS" },
    { 134, "SS" },
    { 135, "SS" },
    { 136, "SS" },
    { 137, "SS" },
    { 139, "SSS" },
    { 140, "SSSfSS" },
    { 141, "S" },
    { 142, "S" },
    { 144, "SS" },
    { 145, "S" },
    { 147, "S" },
    { 148, "S" },
    { 152, "ffSSSS" },
    { 153, "" },
    { 155, "S" },
    { 157, "SSSS" },
    { 158, "SSSS" },
    { 159, "S" },
    { 160, "S" },
    { 162, "" },
    { 165, "f" },
    { 167, "Sf" },
    { 168, "S" },
    { 173, "S" },
    { 174, "S" },
    { 175, "S" },
    { 176, "S" },
    { 177, "S" },
    { 178, "SSf" },
    { 179, "" },
    { 181, "" },
    { 182, "S" },
    { 183, "S" },
    { 184, "S" },
    { 0, 0 },
};

static const InsFormat th09_fmts[] = {
    { 14, "SS" },
    { 63, "Sf" },
    { 64, "SSSf" },
    { 110, "SS" },
    { 114, "ssffSSffSSSSSS" },
    { 138, "S" },
    { 185, "S" },
    { 186, "" },
    { 187, "S" },
    { 0, 0 },
};

static const InsFormat th95_fmts[] = {
    { 0, "" },
    { 14, "SS" },
    { 42, "SfSS" },
    { 43, "fffS" },
    { 49, "fffS" },
    { 56, "SSSSSS" },
    { 84, "Sff" },
    { 85, "" },
    { 86, "SSSffffS" },
    { 87, "SSSffffS" },
    { 88, "SSSffffS" },
    { 89, "SSSffffS" },
    { 90, "SSSffffS" },
    { 91, "SSSffffS" },
    { 94, "SSSffffS" },
    { 100, "ff" },
    { 101, "SSSSSff" },
    { 102, "" },
    { 103, "SS" },
    { 104, "m" },
    { 105, "" },
    { 108, "SS" },
    { 109, "S" },
    { 112, "S" },
    { 114, "S" },
    { 115, "SSS" },
    { 117, "SS" },
    { 118, "S" },
    { 119, "S" },
    { 142, "" },
    { 143, "SS" },
    { 144, "S" },
    { 145, "SSffff" },
    { 146, "SSffff" },
    { 147, "SSfffSSSSfS" },
    { 149, "f" },
    { 150, "S" },
    { 151, "SS" },
    { 152, "fS" },
    { 153, "SSfffSSSSfS" },
    { 155, "SSfffSSSSffff" },
    { 157, "SSfffSSSSfSff" },
    { 0, 0 },
};

static const InsFormat th10_fmts[] = {
    { 0, "" },
    { 1, "" },
    { 10, "" },
    { 11, "m*D" },
    { 12, "ot" },
    { 13, "ot" },
    { 14, "ot" },
    { 15, "m*D" },
    { 16, "mS*D" },
    { 17, "S" },
    { 21, "" },
    { 40, "S" },
    { 42, "S" },
    { 43, "S" },
    { 44, "f" },
    { 45, "f" },
    { 50, "" },
    { 51, "" },
    { 52, "" },
    { 53, "" },
    { 54, "" },
    { 55, "" },
    { 56, "" },
    { 57, "" },
    { 58, "" },
    { 59, "" },
    { 60, "" },
    { 61, "" },
    { 62, "" },
    { 63, "" },
    { 64, "" },
    { 65, "" },
    { 66, "" },
    { 67, "" },
    { 68, "" },
    { 69, "" },
    { 70, "" },
    { 71, "" },
    { 72, "" },
    { 73, "" },
    { 74, "" },
    { 75, "" },
    { 76, "" },
    { 77, "" },
    { 78, "S" },
    { 79, "" },
    { 80, "" },
    { 81, "ffff" },
    { 82, "f" },
    { 83, "S" },
    { 84, "" },
    { 85, "" },
    { 86, "fff" },
    { 87, "fffff" },
    { 88, "" },
    { 89, "SSS" },
    { 256, "mffSSS" },
    { 257, "mffSSS" },
    { 258, "S" },
    { 259, "SS" },
    { 260, "mffSSS" },
    { 261, "mffSSS" },
    { 262, "SS" },
    { 263, "SS" },
    { 264, "SS" },
    { 265, "mffSSS" },
    { 266, "mffSSS" },
    { 267, "mffSSS" },
    { 268, "mffSSS" },
    { 269, "S" },
    { 270, "mffSSSS" },
    { 271, "mffSSSS" },
    { 272, "SS" },
    { 273, "SSf" },
    { 280, "ff" },
    { 281, "SSff" },
    { 282, "ff" },
    { 283, "SSfS" },
    { 284, "ff" },
    { 285, "SSff" },
    { 286, "ff" },
    { 287, "SSff" },
    { 288, "ffff" },
    { 290, "ffff" },
    { 291, "SSfffS" },
    { 292, "SSf" },
    { 293, "SSf" },
    { 294, "" },
    { 295, "" },
    { 296, "SSf" },
    { 297, "ff" },
    { 298, "ff" },
    { 299, "ff" },
    { 320, "ff" },
    { 321, "ff" },
    { 322, "S" },
    { 323, "S" },
    { 324, "ffff" },
    { 325, "" },
    { 326, "" },
    { 327, "SS" },
    { 328, "ff" },
    { 329, "" },
    { 330, "S" },
    { 331, "S" },
    { 332, "S" },
    { 333, "" },
    { 334, "SSSm" },
    { 335, "S" },
    { 336, "S" },
    { 337, "SSS" },
    { 338, "S" },
    { 339, "" },
    { 340, "" },
    { 341, "Sm" },
    { 342, "SSSx" },
    { 343, "" },
    { 344, "S" },
    { 345, "" },
    { 346, "f" },
    { 347, "SfS" },
    { 348, "SSSx" },
    { 349, "ffff" },
    { 350, "ffffff" },
    { 351, "fff" },
    { 352, "SSSS" },
    { 353, "SSSSSS" },
    { 354, "SSS" },
    { 355, "SSSSS" },
    { 356, "fffff" },
    { 357, "SSSx" },
    { 358, "SSSx" },
    { 359, "SSSx" },
    { 360, "S" },
    { 361, "S" },
    { 362, "" },
    { 363, "" },
    { 364, "S" },
    { 365, "" },
    { 366, "SS" },
    { 367, "f" },
    { 368, "SSSS" },
    { 400, "S" },
    { 401, "S" },
    { 402, "SSS" },
    { 403, "Sff" },
    { 404, "Sff" },
    { 405, "Sff" },
    { 406, "SSS" },
    { 407, "SS" },
    { 408, "SSS" },
    { 409, "SSSSSSff" },
    { 410, "" },
    { 411, "SS" },
    { 412, "SSffffSf" },
    { 413, "SSSfffSSSSfS" },
    { 414, "Sff" },
    { 415, "Sff" },
    { 416, "Sf" },
    { 417, "Sf" },
    { 418, "Sf" },
    { 419, "Sf" },
    { 420, "f" },
    { 421, "f" },
    { 422, "Sffffff" },
    { 423, "Sffffffffff" },
    { 424, "Sffff" },
    { 425, "SSSSSSS" },
    { 426, "SSSSSSSSSSS" },
    { 427, "SSSSS" },
    { 428, "SSffSfSf" },
    { 429, "SSSfffSSSSfS" },
    { 430, "Sff" },
    { 431, "SSffSfff" },
    { 432, "SSSfffSSSSfS" },
    { 433, "SSffSfff" },
    { 434, "SSSfffSSSSfS" },
    { 435, "Sffffffff" },
    { 436, "SSSSSSSSS" },
    { -1, NULL }
};

static const InsFormat alcostg_fmts[] = {
    { 16, "mS*D" },
    { 274, "SS" },
    { 275, "SS" },
    { 300, "ffffff" },
    { 301, "ffffff" },
    { 302, "ffffff" },
    { 303, "ffffff" },
    { 369, "SSSS" },
    { 408, "SSS" },
    { 437, "S" },
    { 438, "SS" },
    { 441, "S" },
    { 442, "S" },
    { 443, "S" },
    { 444, "Sf" },
    { -1, NULL }
};

static const InsFormat th11_fmts[] = {
    { 276, "" },
    { 277, "ff" },
    { 278, "S" },
    { 289, "SSfff" },
    { 291, "SSffS" },
    { 305, "Sffffff" },
    { 306, "Sffffff" },
    { 307, "" },
    { 369, "S" },
    { 370, "S" },
    { 371, "S" },
    { 437, "Sff" },
    { 438, "Sf" },
    { 439, "Sff" },
    { 440, "fS" },
    { 441, "S" },
    { 442, "S" },
    { 443, "S" },
    { 444, "S" },
    { 445, "S" },
    { 447, "f" },
    { 448, "S" },
    { 449, "S" },
    { 450, "S" },
    { 500, "S" },
    { -1, NULL }
};

static const InsFormat th12_fmts[] = {
    { 0, "" },
    { 1, "" },
    { 10, "" },
    { 11, "m*D" },
    { 12, "ot" },
    { 13, "ot" },
    { 14, "ot" },
    { 15, "m*D" },
    { 16, "mS*D" },
    { 17, "S" },
    { 21, "" },
    { 40, "S" },
    { 42, "S" },
    { 43, "S" },
    { 44, "f" },
    { 45, "f" },
    { 50, "" },
    { 51, "" },
    { 52, "" },
    { 53, "" },
    { 54, "" },
    { 55, "" },
    { 56, "" },
    { 57, "" },
    { 58, "" },
    { 59, "" },
    { 60, "" },
    { 61, "" },
    { 63, "" },
    { 64, "" },
    { 65, "" },
    { 66, "" },
    { 67, "" },
    { 68, "" },
    { 69, "" },
    { 70, "" },
    { 71, "" },
    { 72, "" },
    { 73, "" },
    { 74, "" },
    { 75, "" },
    { 76, "" },
    { 77, "" },
    { 78, "S" },
    { 79, "" },
    { 80, "" },
    { 81, "ffff" },
    { 82, "f" },
    { 83, "S" },
    { 84, "" },
    { 85, "" },
    { 86, "fff" },
    { 87, "fffff" },
    { 88, "" },
    { 89, "fff" },
    { 256, "mffSSS" },
    { 257, "mffSSS" },
    { 258, "S" },
    { 259, "SS" },
    { 260, "mffSSS" },
    { 261, "mffSSS" },
    { 262, "SS" },
    { 263, "SS" },
    { 264, "SS" },
    { 265, "mffSSS" },
    { 266, "mffSSS" },
    { 267, "mffSSS" },
    { 268, "mffSSS" },
    { 269, "S" },
    { 270, "mffSSSS" },
    { 271, "mffSSSS" },
    { 272, "SS" },
    { 273, "SSf" },
    { 274, "SS" },
    { 275, "SS" },
    { 276, "" },
    { 277, "Sf" },
    { 278, "Sff" },
    { 279, "Sff" },
    { 280, "mSSSSS" },
    { 281, "SS" },
    { 300, "ff" },
    { 301, "SSff" },
    { 302, "ff" },
    { 303, "SSff" },
    { 304, "ff" },
    { 305, "SSff" },
    { 306, "ff" },
    { 307, "SSff" },
    { 308, "ffff" },
    { 309, "SSfff" },
    { 310, "ffff" },
    { 311, "SSfff" },
    { 312, "SSf" },
    { 313, "SSf" },
    { 314, "" },
    { 315, "" },
    { 316, "ff" },
    { 317, "fff" },
    { 318, "ff" },
    { 319, "ff" },
    { 320, "ffffff" },
    { 321, "SSfffff" },
    { 322, "ffffff" },
    { 323, "SSfffff" },
    { 324, "S" },
    { 325, "Sffffff" },
    { 326, "Sffffff" },
    { 327, "" },
    { 328, "ff" },
    { 329, "Sfff" },
    { 330, "ff" },
    { 331, "SSff" },
    { 400, "ff" },
    { 401, "ff" },
    { 402, "S" },
    { 403, "S" },
    { 404, "ffff" },
    { 405, "" },
    { 406, "" },
    { 407, "SS" },
    { 408, "ff" },
    { 409, "" },
    { 410, "S" },
    { 411, "S" },
    { 412, "S" },
    { 413, "" },
    { 414, "SSSm" },
    { 415, "S" },
    { 416, "S" },
    { 417, "SSS" },
    { 418, "S" },
    { 419, "" },
    { 420, "" },
    { 421, "Sm" },
    { 422, "SSSx" },
    { 423, "" },
    { 424, "S" },
    { 425, "" },
    { 426, "f" },
    { 427, "SfS" },
    { 428, "SSSx" },
    { 429, "ffff" },
    { 430, "ffffff" },
    { 431, "fff" },
    { 432, "SSSS" },
    { 433, "SSSSSS" },
    { 434, "SSS" },
    { 435, "SSSSS" },
    { 436, "fffff" },
    { 437, "SSSx" },
    { 438, "SSSx" },
    { 439, "SSSx" },
    { 440, "S" },
    { 440, "S" },
    { 442, "" },
    { 443, "" },
    { 444, "S" },
    { 445, "" },
    { 446, "Sf" },
    { 447, "f" },
    { 448, "SSSS" },
    { 449, "S" },
    { 450, "S" },
    { 451, "S" },
    { 452, "f" },
    { 453, "S" },
    { 454, "" },
    { 455, "SS" },
    { 456, "ffS" },
    { 500, "S" },
    { 501, "S" },
    { 502, "SSS" },
    { 503, "Sff" },
    { 504, "Sff" },
    { 505, "Sff" },
    { 506, "SSS" },
    { 507, "SS" },
    { 508, "SSS" },
    { 509, "SSSSSSff" },
    { 510, "" },
    { 511, "SS" },
    { 512, "f" },
    { 513, "f" },
    { 514, "Sffffff" },
    { 515, "Sffffffffff" },
    { 516, "Sffff" },
    { 517, "SSSSSSS" },
    { 518, "SSSSSSSSSSS" },
    { 519, "SSSSS" },
    { 520, "fff" },
    { 521, "Sffffffff" },
    { 522, "SSSSSSSSS" },
    { 523, "Sff" },
    { 524, "Sf" },
    { 525, "Sff" },
    { 526, "fS" },
    { 527, "" },
    { 528, "" },
    { 529, "S" },
    { 530, "S" },
    { 531, "S" },
    { 532, "f" },
    { 533, "f" },
    { 534, "S" },
    { 535, "S" },
    { 600, "Sffff" },
    { 601, "SSSSSS" },
    { 602, "S" },
    { 603, "SS" },
    { 604, "Sff" },
    { 605, "Sff" },
    { 606, "Sf" },
    { 607, "Sf" },
    { 608, "Sf" },
    { 609, "Sf" },
    { 610, "S" },
    { 611, "S" },
    { 700, "S" },
    { -1, NULL }
};

static const InsFormat th125_fmts[] = {
    { 30, "m*D" },
    { 62, "" },
    { 77, "" },
    { 79, "" },
    { 80, "" },
    { 85, "" },
    { 88, "" },
    { 90, "fffff" },
    { 91, "SfSSff" },
    { 282, "SS" },
    { 303, "SSfS" },
    { 306, "fS" },
    { 307, "SSff" },
    { 318, "Sf" },
    { 322, "fffSfS" },
    { 327, "" },
    { 333, "S" },
    { 426, "f" },
    { 457, "" },
    { 458, "S" },
    { 459, "S" },
    { 460, "f" },
    { 461, "f" },
    { 462, "S" },
    { 463, "m" },
    { 532, "f" },
    { 536, "S" },
    { 604, "SSf" },
    { 609, "Sf" },
    { 612, "ff" },
    { -1, NULL }
};

static const InsFormat th128_fmts[] = {
    { 22, "Sm" },
    { 71, "" },
    { 283, "ffS" },
    { 537, "fSfSSSffffff" },
    { 538, "SSm" },
    { 613, "S" },
    { 614, "fS" },
    { 615, "SS" },
    { -1, NULL }
};

static const InsFormat th13_fmts[] = {
    { 0, "" },
    { 1, "" },
    { 10, "" },
    { 11, "m*D" },
    { 12, "ot" },
    { 13, "ot" },
    { 14, "ot" },
    { 15, "m*D" },
    { 16, "mS*D" },
    { 17, "S" },
    { 18, "S" },
    { 19, "S" },
    { 20, "SS" },
    { 21, "" },
    { 22, "Sm" },
    { 23, "S" },
    { 24, "f" },
    { 30, "m*D" },
    { 40, "S" },
    { 42, "S" },
    { 43, "S" },
    { 44, "f" },
    { 45, "f" },
    { 50, "" },
    { 51, "" },
    { 52, "" },
    { 53, "" },
    { 54, "" },
    { 55, "" },
    { 56, "" },
    { 57, "" },
    { 58, "" },
    { 59, "" },
    { 60, "" },
    { 61, "" },
    { 62, "" },
    { 63, "" },
    { 65, "" },
    { 64, "" },
    { 66, "" },
    { 67, "" },
    { 68, "" },
    { 69, "" },
    { 70, "" },
    { 71, "" },
    { 72, "" },
    { 73, "" },
    { 74, "" },
    { 75, "" },
    { 76, "" },
    { 77, "" },
    { 78, "S" },
    { 81, "ffff" },
    { 82, "f" },
    { 83, "" },
    { 84, "" },
    { 85, "fff" },
    { 86, "fff" },
    { 87, "fffff" },
    { 88, "fffff" },
    { 89, "fff" },
    { 90, "fffff" },
    { 91, "SfSSff" },
    { 92, "SfSSff" },
    { 93, "ffff" },
    { 300, "mffSSS" },
    { 301, "mffSSS" },
    { 302, "S" },
    { 303, "SS" },
    { 304, "mffSSS" },
    { 305, "mffSSS" },
    { 306, "SS" },
    { 307, "SS" },
    { 308, "SS" },
    { 309, "mffSSS" },
    { 310, "mffSSS" },
    { 311, "mffSSS" },
    { 312, "mffSSS" },
    { 313, "S" },
    { 314, "SS" },
    { 315, "SSf" },
    { 316, "SS" },
    { 317, "SS" },
    { 318, "" },
    { 319, "Sf" },
    { 320, "Sff" },
    { 321, "mSSSSS" },
    { 322, "SS" },
    { 323, "SS" },
    { 324, "S" },
    { 325, "SSSS" },
    { 326, "SSSSSS" },
    { 327, "SS" },
    { 328, "SSSS" },
    { 329, "Sff" },
    { 330, "SSSff" },
    { 331, "SS" },
    { 332, "SSSS" },
    { 333, "SSSff" },
    { 334, "S" },
    { 335, "Sff" },
    { 400, "ff" },
    { 401, "SSff" },
    { 402, "ff" },
    { 403, "SSff" },
    { 404, "ff" },
    { 405, "SSff" },
    { 406, "ff" },
    { 407, "SSff" },
    { 408, "ffff" },
    { 409, "SSfff" },
    { 410, "ffff" },
    { 411, "SSfff" },
    { 412, "SSf" },
    { 413, "SSf" },
    { 414, "" },
    { 415, "" },
    { 416, "fff" },
    { 417, "fff" },
    { 418, "ff" },
    { 419, "ff" },
    { 420, "ffffff" },
    { 421, "SSfffff" },
    { 422, "ffffff" },
    { 423, "SSfffff" },
    { 424, "S" },
    { 425, "Sffffff" },
    { 426, "Sffffff" },
    { 427, "" },
    { 428, "ff" },
    { 429, "SSff" },
    { 430, "ff" },
    { 431, "SSff" },
    { 432, "S" },
    { 433, "S" },
    { 434, "SSSff" },
    { 435, "SSSff" },
    { 436, "SSff" },
    { 437, "SSff" },
    { 438, "SSSff" },
    { 439, "SSSff" },
    { 500, "ff" },
    { 501, "ff" },
    { 502, "S" },
    { 503, "S" },
    { 504, "ffff" },
    { 505, "" },
    { 506, "" },
    { 507, "SS" },
    { 508, "ff" },
    { 509, "" },
    { 510, "S" },
    { 511, "S" },
    { 512, "S" },
    { 513, "" },
    { 514, "SSSm" },
    { 515, "S" },
    { 516, "S" },
    { 517, "SSS" },
    { 518, "S" },
    { 519, "" },
    { 520, "" },
    { 521, "Sm" },
    { 522, "SSSx" },
    { 523, "" },
    { 524, "S" },
    { 525, "" },
    { 526, "f" },
    { 527, "SfS" },
    { 528, "SSSx" },
    { 529, "ffff" },
    { 530, "ffffff" },
    { 531, "fff" },
    { 532, "SSSS" },
    { 533, "SSSSSS" },
    { 534, "SSS" },
    { 535, "SSSSS" },
    { 536, "fffff" },
    { 537, "SSSx" },
    { 538, "SSSx" },
    { 539, "SSSx" },
    { 540, "S" },
    { 541, "S" },
    { 542, "" },
    { 543, "" },
    { 544, "S" },
    { 545, "" },
    { 546, "SS" },
    { 547, "f" },
    { 548, "SSSS" },
    { 549, "S" },
    { 550, "S" },
    { 551, "S" },
    { 552, "S" },
    { 553, "S" },
    { 554, "" },
    { 555, "SS" },
    { 556, "m" },
    { 557, "SSSff" },
    { 558, "S" },
    { 559, "S" },
    { 560, "ff" },
    { 561, "" },
    { 562, "" },
    { 600, "S" },
    { 601, "S" },
    { 602, "SSS" },
    { 603, "Sff" },
    { 604, "Sff" },
    { 605, "Sff" },
    { 606, "SSS" },
    { 607, "SS" },
    { 608, "SSS" },
    { 609, "SSSSSSff" },
    { 610, "SSSSSSSSffff" },
    { 611, "SSSSSff" },
    { 612, "SSSSSSSffff" },
    { 613, "" },
    { 614, "SS" },
    { 615, "f" },
    { 616, "f" },
    { 617, "Sffffff" },
    { 618, "Sffffffffff" },
    { 619, "Sffff" },
    { 620, "SSSSSSS" },
    { 621, "SSSSSSSSSSS" },
    { 622, "SSSSS" },
    { 623, "fff" },
    { 624, "Sffffffff" },
    { 625, "SSSSSSSSS" },
    { 626, "Sff" },
    { 627, "Sf" },
    { 628, "Sff" },
    { 629, "fS" },
    { 630, "S" },
    { 631, "S" },
    { 632, "S" },
    { 633, "S" },
    { 634, "S" },
    { 635, "f" },
    { 636, "f" },
    { 637, "S" },
    { 638, "S" },
    { 639, "S" },
    { 640, "SSm" },
    { 700, "Sffff" },
    { 701, "SSSSSS" },
    { 702, "S" },
    { 703, "SS" },
    { 704, "Sff" },
    { 705, "Sff" },
    { 706, "Sf" },
    { 707, "Sf" },
    { 708, "Sf" },
    { 709, "Sf" },
    { 710, "S" },
    { 711, "S" },
    { 712, "ff" },
    { 713, "S" },
    { 714, "SS" },
    { 800, "Sm" },
    { 801, "ffS" },
    { 802, "S" },
    { 900, "S" },
    { 1000, "S" },
    { 1001, "S" },
    { 1002, "S" },
    { 1003, "S" },
    { -1, NULL }
};

/* Inherits th13_fmts */
static const InsFormat th14_fmts[] = {
    { 336, "SS" },
    { 337, "SSfff" },
    { 440, "f" },
    { 441, "SSf" },
    { 442, "f" },
    { 443, "SSf" },
    { 444, "f" },
    { 445, "SSf" },
    { 446, "f" },
    { 447, "SSf" },
    { 563, "S" },
    { 564, "f" },
    { 565, "f" },
    { 566, "" },
    { 567, "S" },
    { 568, "S" },
    { 641, "S" },
    { 901, "" },
    { 902, "" },
    { -1, NULL }
};

static const InsFormat th143_fmts[] = {
    { 1004, "" },
    { 1005, "" },
    { 1006, "" },
    { -1, NULL }
};

static const InsFormat th15_fmts[] = {
    { 569, "S" },
    { 570, "" },
    { 571, "" },
    { -1, NULL }
};

static const InsFormat th16_fmts[] = {
    { 337, "SS" },
    { 338, "SSfff" },
    { 339, "SSS" },
    { 340, "S" },
    { 572, "S" },
    { 1000, "SSS" },
    { -1, NULL }
};

static const InsFormat th165_fmts[] = {
    { 1000, "" },
    { 1001, "" },
    { 1002, "f" },
    { 1005, "S" },
    { 1006, "f" },
    { 1007, "S" },
    { 1008, "S" },
    { 1009, "S" },
    { 1010, "f" },
    { 1011, "S" },
    { 1012, "S" },
    { 1013, "" },
    { 1014, "S" },
    { -1, NULL }
};

static const InsFormat th17_fmts[] = {
    { 904, "f" },
    { 1001, "S"},
    { -1, NULL }
};

static const InsFormat th18_fmts[] = {
    { 94, "ffffff" },
    { 573, "SS" },
    { 574, "S" },
    { -1, NULL }
};

static const InsFormat th185_fmts[] = {
    { 535, "SSSSSSSSS" },
    { 536, "fffffffff" },
    { 1001, "S" },
    { 1002, "" },
    { 1003, "" },
    { 1004, "S" },
    { 1005, "" },
    { 1006, "m" },
    { 1008, "" },
    { 1009, "" },
    { 1010, ""},
    { 1011, "SS" },
    { 1013, "SSSSSSSSS" },
    { 1015, "SS" },
    { 1017, "" },
    { 1018, "S" },
    { 1019, "" },
    { 1020, "S" },
    { 1021, "SS" },
    { 1022, "S" },
    { 1023, "S" },
    { 1024, "S" },
    { 1025, "" },
    { 1026, "S" },
    { -1, NULL }
};

static const InsFormat th19_fmts[] = {
    { 534, "S" },
    { 539, "" },
    { 549, "SS" },
    { 569, "fffff" },
    { 570, "SSSSSSSSS" },
    { 571, "fffffffff" },
    { 619, "Sf" },
    { 620, "Sff" },
    { 621, "fS" },
    { 622, "S" },
    { 624, "S" },
    { 1027, "S" },
    { 1028, "f" },
    { 1029, "S" },
    { 1030, "S" },
    { 1031, "S" },
    { 1032, "S" },
    { 1033, "S" },
    { 1034, "" },
    { 1035, "" },
    { 1036, "" },
    { -1, NULL }
};

const char* find_format(const InsFormat* fmts, int id)
{
    int i;
    for (i = 0; fmts[i].ins_format; ++i) {
        if (fmts[i].id == id)
            return fmts[i].ins_format;
    }
    return NULL;
}

#pragma warning(push)
#pragma warning(disable:26819)

const char* GetFormat(int version,int32_t id)
{
    const char* ret = 0;
    switch (version) {
        /* NEWHU: 19 */
    case 19:
        if ((ret = find_format(th19_fmts, id))) break; /* fallthrough */
    case 185:
        if ((ret = find_format(th185_fmts, id))) break; /* fallthrough */
    case 18:
        if ((ret = find_format(th18_fmts, id))) break; /* fallthrough */
    case 17:
        if ((ret = find_format(th17_fmts, id))) break; /* fallthrough */
    case 165:
        if ((ret = find_format(th165_fmts, id))) break; /* fallthrough */
    case 16:
        if ((ret = find_format(th16_fmts, id))) break; /* fallthrough */
    case 15:
        if ((ret = find_format(th15_fmts, id))) break; /* fallthrough */
    case 143:
        if ((ret = find_format(th143_fmts, id))) break; /* fallthrough */
    case 14:
        if ((ret = find_format(th14_fmts, id))) break; /* fallthrough */
    case 13:
        if ((ret = find_format(th13_fmts, id))) break; /* fallthrough */
    case 128:
        if ((ret = find_format(th128_fmts, id))) break; /* fallthrough */
    case 125:
        if ((ret = find_format(th125_fmts, id))) break; /* fallthrough */
    case 12:
        if ((ret = find_format(th12_fmts, id))) break; /* fallthrough */
    case 11:
        if ((ret = find_format(th11_fmts, id))) break; /* fallthrough */
    case 103:
        if ((ret = find_format(alcostg_fmts, id))) break; /* fallthrough */
    case 10:
        ret = find_format(th10_fmts, id); break;
    case 95:
        if ((ret = find_format(th95_fmts, id))) break;
    case 9:
        if ((ret = find_format(th09_fmts, id))) break;
    case 8:
        if ((ret = find_format(th08_fmts, id))) break;
    case 7:
        if ((ret = find_format(th07_fmts, id))) break;
    case 6:
        ret = find_format(th06_fmts, id); break;
    default:
        return NULL;
    }
    return ret;
}

#pragma warning(pop)